name: Test OpenBTMixing C++ Command Line Tools 
env:
  CLONE_PATH:   ${{ github.workspace }}
  INSTALL_PATH: ${{ github.workspace }}/../local/OpenBT
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  #####----- FULL TESTING WITHOUT COVERAGE
  # NOTE: AFAIU, the C++ command line tests are not actively maintained nor do
  # they perform any automatic test of results to confirm correctness.  Rather,
  # an expert has to review the output to manually confirm success.
  #
  # This also confirms that the build script works.
  test_CLTs:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-14, macos-15,
             ubuntu-22.04, ubuntu-24.04]
        mpi_impl: ["openmpi", "mpich"]
        python-version: ["3.13"]

    steps:
    ##-- Setup Testing Environment
    - name: Checkout OpenBTMixing
      uses: actions/checkout@v4
    - name: Install ${{ matrix.mpi_impl }}
      run: |
        if   [ "${{ runner.os }}" = "Linux" ]; then
           sudo apt-get update
           if   [ "${{ matrix.mpi_impl }}" = "openmpi" ]; then
              sudo apt-get -y install openmpi-bin libopenmpi-dev
           elif [ "${{ matrix.mpi_impl }}" = "mpich" ]; then
              sudo apt-get -y install mpich
           else
              echo "Cannot install ${{ matrix.mpi_impl }} for Linux"
              exit 1
           fi
        elif [ "${{ runner.os }}" = "macOS" ]; then
           if   [ "${{ matrix.mpi_impl }}" = "openmpi" ]; then
              brew install open-mpi
           elif [ "${{ matrix.mpi_impl }}" = "mpich" ]; then
              brew install mpich
           else
              echo "Cannot install ${{ matrix.mpi_impl }} for macOS"
              exit 1
           fi
        fi
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Python dependencies
      run: $CLONE_PATH/.github/workflows/setup_base_python.sh ${{ runner.os }}
    - name: Install Meson build system
      run: $CLONE_PATH/.github/workflows/install_meson.sh ${{ github.workspace }} ${{ runner.os }}

    ##-- Build CLTs from Scratch, Install, & Test
    - name: Build OpenBTMixing C++ CLTs & Library
      run: |
        $CLONE_PATH/tools/build_openbt_clt.sh $INSTALL_PATH --debug
        echo " "
        if   [ "${{ runner.os }}" = "macOS" ]; then
            otool -L $INSTALL_PATH/bin/openbtcli
        elif [ "${{ runner.os }}" = "Linux" ]; then
            ldd $INSTALL_PATH/bin/openbtcli 
        else
            echo "Invalid OS ${{ runner.os }}"
        fi
        echo " "
        objdump -p $INSTALL_PATH/bin/openbtcli
        echo " "
